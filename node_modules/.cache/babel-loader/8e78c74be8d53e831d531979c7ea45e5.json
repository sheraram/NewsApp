{"ast":null,"code":"import _objectSpread from \"/home/shera/Desktop/React/newsapp/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/shera/Desktop/React/newsapp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useRef, useEffect, forwardRef, useState, useImperativeHandle, createElement } from 'react';\n\nvar noop = function noop() {};\n\nfunction useInterval(callback, delay, immediate) {\n  var savedCallback = useRef(noop);\n  useEffect(function () {\n    savedCallback.current = callback;\n  });\n  useEffect(function () {\n    if (!immediate) return;\n    if (delay === null || delay === false) return;\n    savedCallback.current();\n  }, [immediate]);\n  useEffect(function () {\n    if (delay === null || delay === false) return undefined;\n\n    var tick = function tick() {\n      return savedCallback.current();\n    };\n\n    var id = setInterval(tick, delay);\n    return function () {\n      return clearInterval(id);\n    };\n  }, [delay]);\n}\n\nfunction randomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nvar LoadingBar = forwardRef(function (_ref, ref) {\n  var progress = _ref.progress,\n      _ref$height = _ref.height,\n      _height = _ref$height === void 0 ? 2 : _ref$height,\n      _ref$className = _ref.className,\n      _className = _ref$className === void 0 ? '' : _ref$className,\n      _ref$color = _ref.color,\n      _color = _ref$color === void 0 ? 'red' : _ref$color,\n      _ref$background = _ref.background,\n      _background = _ref$background === void 0 ? 'transparent' : _ref$background,\n      onLoaderFinished = _ref.onLoaderFinished,\n      _ref$transitionTime = _ref.transitionTime,\n      _transitionTime = _ref$transitionTime === void 0 ? 300 : _ref$transitionTime,\n      _ref$loaderSpeed = _ref.loaderSpeed,\n      _loaderSpeed = _ref$loaderSpeed === void 0 ? 500 : _ref$loaderSpeed,\n      _ref$waitingTime = _ref.waitingTime,\n      _waitingTime = _ref$waitingTime === void 0 ? 1000 : _ref$waitingTime,\n      _ref$shadow = _ref.shadow,\n      _shadow = _ref$shadow === void 0 ? true : _ref$shadow,\n      _ref$containerStyle = _ref.containerStyle,\n      _containerStyle = _ref$containerStyle === void 0 ? {} : _ref$containerStyle,\n      _ref$style = _ref.style,\n      _style = _ref$style === void 0 ? {} : _ref$style,\n      _ref$shadowStyle = _ref.shadowStyle,\n      shadowStyleProp = _ref$shadowStyle === void 0 ? {} : _ref$shadowStyle,\n      _ref$containerClassNa = _ref.containerClassName,\n      _containerClassName = _ref$containerClassNa === void 0 ? '' : _ref$containerClassNa;\n\n  var isMounted = useRef(false);\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      localProgress = _useState2[0],\n      localProgressSet = _useState2[1];\n\n  var _useState3 = useState({\n    active: false,\n    startingValue: 20,\n    refreshRate: 1000\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      pressedContinuous = _useState4[0],\n      setPressedContinuous = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      usingProps = _useState6[0],\n      setUsingProps = _useState6[1];\n\n  var _useState7 = useState({\n    active: false,\n    value: 20\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pressedStaticStart = _useState8[0],\n      setStaticStartPressed = _useState8[1];\n\n  var initialLoaderStyle = {\n    height: '100%',\n    background: _color,\n    transition: \"all \".concat(_loaderSpeed, \"ms ease\"),\n    width: '0%'\n  };\n  var loaderContainerStyle = {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: _height,\n    background: _background,\n    zIndex: 99999999999,\n    width: 100 + '%'\n  };\n  var initialShadowStyles = {\n    boxShadow: \"0 0 10px \".concat(_color, \", 0 0 10px \").concat(_color),\n    width: '5%',\n    opacity: 1,\n    position: 'absolute',\n    height: '100%',\n    transition: \"all \".concat(_loaderSpeed, \"ms ease\"),\n    transform: 'rotate(3deg) translate(0px, -4px)',\n    left: '-10rem'\n  };\n\n  var _useState9 = useState(initialLoaderStyle),\n      _useState10 = _slicedToArray(_useState9, 2),\n      loaderStyle = _useState10[0],\n      loaderStyleSet = _useState10[1];\n\n  var _useState11 = useState(initialShadowStyles),\n      _useState12 = _slicedToArray(_useState11, 2),\n      shadowStyle = _useState12[0],\n      shadowStyleSet = _useState12[1];\n\n  useEffect(function () {\n    isMounted.current = true;\n    return function () {\n      isMounted.current = false;\n    };\n  }, []);\n  useImperativeHandle(ref, function () {\n    return {\n      continuousStart: function continuousStart(startingValue) {\n        var refreshRate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1000;\n        if (pressedStaticStart.active) return;\n\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        var val = startingValue || randomInt(10, 20);\n        setPressedContinuous({\n          active: true,\n          refreshRate: refreshRate,\n          startingValue: startingValue\n        });\n        localProgressSet(val);\n        checkIfFull(val);\n      },\n      staticStart: function staticStart(startingValue) {\n        if (pressedContinuous.active) return;\n\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        var val = startingValue || randomInt(30, 50);\n        setStaticStartPressed({\n          active: true,\n          value: val\n        });\n        localProgressSet(val);\n        checkIfFull(val);\n      },\n      complete: function complete() {\n        if (usingProps) {\n          console.warn(\"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\");\n          return;\n        }\n\n        localProgressSet(100);\n        checkIfFull(100);\n      }\n    };\n  });\n  useEffect(function () {\n    loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n      background: _color\n    }));\n    shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n      boxShadow: \"0 0 10px \".concat(_color, \", 0 0 5px \").concat(_color)\n    }));\n  }, [_color]);\n  useEffect(function () {\n    if (ref) {\n      if (ref && progress !== undefined) {\n        console.warn('react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.');\n        return;\n      }\n\n      checkIfFull(localProgress);\n      setUsingProps(false);\n    } else {\n      if (progress) checkIfFull(progress);\n      setUsingProps(true);\n    }\n  }, [progress]);\n\n  var checkIfFull = function checkIfFull(_progress) {\n    if (_progress >= 100) {\n      loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n        width: '100%'\n      }));\n\n      if (_shadow) {\n        shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n          left: _progress - 10 + '%'\n        }));\n      }\n\n      setTimeout(function () {\n        if (!isMounted.current) {\n          return;\n        }\n\n        loaderStyleSet(_objectSpread(_objectSpread({}, loaderStyle), {}, {\n          opacity: 0,\n          width: '100%',\n          transition: \"all \".concat(_transitionTime, \"ms ease-out\"),\n          color: _color\n        }));\n        setTimeout(function () {\n          if (!isMounted.current) {\n            return;\n          }\n\n          if (pressedContinuous.active) {\n            setPressedContinuous(_objectSpread(_objectSpread({}, pressedContinuous), {}, {\n              active: false\n            }));\n            localProgressSet(0);\n            checkIfFull(0);\n          }\n\n          if (pressedStaticStart.active) {\n            setStaticStartPressed(_objectSpread(_objectSpread({}, pressedStaticStart), {}, {\n              active: false\n            }));\n            localProgressSet(0);\n            checkIfFull(0);\n          }\n\n          if (onLoaderFinished) onLoaderFinished();\n          localProgressSet(0);\n          checkIfFull(0);\n        }, _transitionTime);\n      }, _waitingTime);\n    } else {\n      loaderStyleSet(function (_loaderStyle) {\n        return _objectSpread(_objectSpread({}, _loaderStyle), {}, {\n          width: _progress + '%',\n          opacity: 1,\n          transition: _progress > 0 ? \"all \".concat(_loaderSpeed, \"ms ease\") : ''\n        });\n      });\n\n      if (_shadow) {\n        shadowStyleSet(_objectSpread(_objectSpread({}, shadowStyle), {}, {\n          left: _progress - 5.5 + '%',\n          transition: _progress > 0 ? \"all \".concat(_loaderSpeed, \"ms ease\") : ''\n        }));\n      }\n    }\n  };\n\n  useInterval(function () {\n    var random = randomInt(10, 20);\n\n    if (localProgress + random < 90) {\n      localProgressSet(localProgress + random);\n      checkIfFull(localProgress + random);\n    }\n  }, pressedContinuous.active ? pressedContinuous.refreshRate : null);\n  return createElement(\"div\", {\n    className: _containerClassName,\n    style: _objectSpread(_objectSpread({}, loaderContainerStyle), _containerStyle)\n  }, createElement(\"div\", {\n    className: _className,\n    style: _objectSpread(_objectSpread({}, loaderStyle), _style)\n  }, _shadow ? createElement(\"div\", {\n    style: _objectSpread(_objectSpread({}, shadowStyle), shadowStyleProp)\n  }) : null));\n});\nexport default LoadingBar;","map":{"version":3,"sources":["/home/shera/Desktop/React/newsapp/node_modules/react-top-loading-bar/src/useInterval.ts","/home/shera/Desktop/React/newsapp/node_modules/react-top-loading-bar/src/utils.ts","/home/shera/Desktop/React/newsapp/node_modules/react-top-loading-bar/src/index.tsx"],"names":["noop","useInterval","callback","delay","immediate","savedCallback","useRef","useEffect","tick","id","setInterval","clearInterval","randomInt","min","max","Math","LoadingBar","forwardRef","height","className","color","background","transitionTime","loaderSpeed","waitingTime","shadow","containerStyle","style","shadowStyle","shadowStyleProp","containerClassName","isMounted","useState","active","startingValue","refreshRate","value","initialLoaderStyle","transition","width","loaderContainerStyle","position","top","left","zIndex","initialShadowStyles","boxShadow","opacity","transform","useImperativeHandle","continuousStart","pressedStaticStart","console","val","setPressedContinuous","localProgressSet","checkIfFull","staticStart","pressedContinuous","setStaticStartPressed","complete","loaderStyleSet","shadowStyleSet","ref","progress","setUsingProps","_progress","setTimeout","onLoaderFinished","_loaderStyle","random","localProgress"],"mappings":";;;;AAGA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAA,CAAb,CAAA;;SAEgBC,W,CACdC,Q,EACAC,K,EACAC,S,EAAAA;AAEA,MAAMC,aAAa,GAAGC,MAAM,CAA5B,IAA4B,CAA5B;AAGAC,EAAAA,SAAS,CAAC,YAAA;AACRF,IAAAA,aAAa,CAAbA,OAAAA,GAAAA,QAAAA;AADFE,GAAS,CAATA;AAKAA,EAAAA,SAAS,CAAC,YAAA;AACR,QAAI,CAAJ,SAAA,EAAgB;AAChB,QAAIJ,KAAK,KAALA,IAAAA,IAAkBA,KAAK,KAA3B,KAAA,EAAuC;AACvCE,IAAAA,aAAa,CAAbA,OAAAA;AAHO,GAAA,EAIN,CAJHE,SAIG,CAJM,CAATA;AAOAA,EAAAA,SAAS,CAAC,YAAA;AACR,QAAIJ,KAAK,KAALA,IAAAA,IAAkBA,KAAK,KAA3B,KAAA,EAAuC,OAAA,SAAA;;AACvC,QAAMK,IAAI,GAAG,SAAPA,IAAO;AAAA,aAAMH,aAAa,CAAhC,OAAmBA,EAAN;AAAA,KAAb;;AACA,QAAMI,EAAE,GAAGC,WAAW,CAAA,IAAA,EAAtB,KAAsB,CAAtB;AACA,WAAO;AAAA,aAAMC,aAAa,CAA1B,EAA0B,CAAnB;AAAA,KAAP;AAJO,GAAA,EAKN,CALHJ,KAKG,CALM,CAATA;AAMD;;SC/BeK,S,CAAUC,G,EAAaC,G,EAAAA;AAErC,SAAOC,IAAI,CAAJA,KAAAA,CAAWA,IAAI,CAAJA,MAAAA,MAAiBD,GAAG,GAAHA,GAAAA,GAAjBC,CAAAA,IAAlB,GAAOA,CAAP;AACD;;ACgCD,IAAMC,UAAU,GAAGC,UAAU,CAC3B,gBAAA,GAAA,EAAA;AAAA,MACE,QADF,QACE,QADF;AAAA,yBAGIC,MAHJ;AAAA,MAGIA,OAHJ,4BACE,CADF;AAAA,4BAIIC,SAJJ;AAAA,MAIIA,UAJJ,+BACE,EADF;AAAA,wBAKIC,KALJ;AAAA,MAKIA,MALJ,2BACE,KADF;AAAA,6BAMIC,UANJ;AAAA,MAMIA,WANJ,gCACE,aADF;AAAA,MACE,gBADF,QACE,gBADF;AAAA,iCAQIC,cARJ;AAAA,MAQIA,eARJ,oCACE,GADF;AAAA,8BASIC,WATJ;AAAA,MASIA,YATJ,iCACE,GADF;AAAA,8BAUIC,WAVJ;AAAA,MAUIA,YAVJ,iCACE,IADF;AAAA,yBAWIC,MAXJ;AAAA,MAWIA,OAXJ,4BACE,IADF;AAAA,iCAYIC,cAZJ;AAAA,MAYIA,eAZJ,oCACE,EADF;AAAA,wBAaIC,KAbJ;AAAA,MAaIA,MAbJ,2BACE,EADF;AAAA,8BAcIC,WAdJ;AAAA,MAciBC,eAdjB,iCACE,EADF;AAAA,mCAeIC,kBAfJ;AAAA,MAeIA,mBAfJ,sCAeyB,EAfzB;;AAmBE,MAAMC,SAAS,GAAGzB,MAAM,CAAxB,KAAwB,CAAxB;;AACA,kBAA0C0B,QAAQ,CAAlD,CAAkD,CAAlD;AAAA;AAAA,MAAM,aAAN;AAAA,MAAM,gBAAN;;AACA,mBAAkDA,QAAQ,CAIvD;AAAEC,IAAAA,MAAM,EAAR,KAAA;AAAiBC,IAAAA,aAAa,EAA9B,EAAA;AAAoCC,IAAAA,WAAW,EAAE;AAAjD,GAJuD,CAA1D;AAAA;AAAA,MAAM,iBAAN;AAAA,MAAM,oBAAN;;AAKA,mBAAoCH,QAAQ,CAA5C,KAA4C,CAA5C;AAAA;AAAA,MAAM,UAAN;AAAA,MAAM,aAAN;;AAEA,mBAAoDA,QAAQ,CAGzD;AAAEC,IAAAA,MAAM,EAAR,KAAA;AAAiBG,IAAAA,KAAK,EAAE;AAAxB,GAHyD,CAA5D;AAAA;AAAA,MAAM,kBAAN;AAAA,MAAM,qBAAN;;AAKA,MAAMC,kBAAkB,GAAkB;AACxCnB,IAAAA,MAAM,EADkC,MAAA;AAExCG,IAAAA,UAAU,EAF8B,MAAA;AAGxCiB,IAAAA,UAAU,gBAH8B,YAG9B,YAH8B;AAIxCC,IAAAA,KAAK,EAAE;AAJiC,GAA1C;AAOA,MAAMC,oBAAoB,GAAkB;AAC1CC,IAAAA,QAAQ,EADkC,OAAA;AAE1CC,IAAAA,GAAG,EAFuC,CAAA;AAG1CC,IAAAA,IAAI,EAHsC,CAAA;AAI1CzB,IAAAA,MAAM,EAJoC,OAAA;AAK1CG,IAAAA,UAAU,EALgC,WAAA;AAM1CuB,IAAAA,MAAM,EANoC,WAAA;AAO1CL,IAAAA,KAAK,EAAE,MAAM;AAP6B,GAA5C;AAUA,MAAMM,mBAAmB,GAAkB;AACzCC,IAAAA,SAAS,qBAAc1B,MAAd,wBADgC,MAChC,CADgC;AAEzCmB,IAAAA,KAAK,EAFoC,IAAA;AAGzCQ,IAAAA,OAAO,EAHkC,CAAA;AAIzCN,IAAAA,QAAQ,EAJiC,UAAA;AAKzCvB,IAAAA,MAAM,EALmC,MAAA;AAMzCoB,IAAAA,UAAU,gBAN+B,YAM/B,YAN+B;AAOzCU,IAAAA,SAAS,EAPgC,mCAAA;AAQzCL,IAAAA,IAAI,EAAE;AARmC,GAA3C;;AAWA,mBAAsCX,QAAQ,CAA9C,kBAA8C,CAA9C;AAAA;AAAA,MAAM,WAAN;AAAA,MAAM,cAAN;;AAGA,oBAAsCA,QAAQ,CAA9C,mBAA8C,CAA9C;AAAA;AAAA,MAAM,WAAN;AAAA,MAAM,cAAN;;AAIAzB,EAAAA,SAAS,CAAC,YAAA;AACRwB,IAAAA,SAAS,CAATA,OAAAA,GAAAA,IAAAA;AACA,WAAO,YAAA;AACLA,MAAAA,SAAS,CAATA,OAAAA,GAAAA,KAAAA;AADF,KAAA;AAFO,GAAA,EAATxB,EAAS,CAATA;AAOA0C,EAAAA,mBAAmB,CAAA,GAAA,EAAM;AAAA,WAAO;AAC9BC,MAAAA,eAD8B,2BACf,aADe,EACf;AAAA,YAAwBf,WAAxB,uEAAA,IAAA;AACb,YAAIgB,kBAAkB,CAAtB,MAAA,EAA+B;;AAC/B,YAAA,UAAA,EAAgB;AACdC,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,oGAAAA;AAGA;AACD;;AAED,YAAMC,GAAG,GAAGnB,aAAa,IAAItB,SAAS,CAAA,EAAA,EAAtC,EAAsC,CAAtC;AACA0C,QAAAA,oBAAoB,CAAC;AACnBrB,UAAAA,MAAM,EADa,IAAA;AAEnBE,UAAAA,WAFmB,EAEnBA,WAFmB;AAGnBD,UAAAA,aAAAA,EAAAA;AAHmB,SAAD,CAApBoB;AAKAC,QAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA;AACAC,QAAAA,WAAW,CAAXA,GAAW,CAAXA;AAjB4B,OAAA;AAmB9BC,MAAAA,WAnB8B,uBAmBnB,aAnBmB,EAmBnB;AACT,YAAIC,iBAAiB,CAArB,MAAA,EAA8B;;AAC9B,YAAA,UAAA,EAAgB;AACdN,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,oGAAAA;AAGA;AACD;;AAED,YAAMC,GAAG,GAAGnB,aAAa,IAAItB,SAAS,CAAA,EAAA,EAAtC,EAAsC,CAAtC;AACA+C,QAAAA,qBAAqB,CAAC;AACpB1B,UAAAA,MAAM,EADc,IAAA;AAEpBG,UAAAA,KAAK,EAAEiB;AAFa,SAAD,CAArBM;AAIAJ,QAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA;AACAC,QAAAA,WAAW,CAAXA,GAAW,CAAXA;AAlC4B,OAAA;AAoC9BI,MAAAA,QApC8B,sBAoCtB;AACN,YAAA,UAAA,EAAgB;AACdR,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,oGAAAA;AAGA;AACD;;AACDG,QAAAA,gBAAgB,CAAhBA,GAAgB,CAAhBA;AACAC,QAAAA,WAAW,CAAXA,GAAW,CAAXA;AACD;AA7C6B,KAAP;AAAA,GAAN,CAAnBP;AAgDA1C,EAAAA,SAAS,CAAC,YAAA;AACRsD,IAAAA,cAAc,iCAAC,WAAD;AAEZxC,MAAAA,UAAU,EAAED;AAFA,OAAdyC;AAKAC,IAAAA,cAAc,iCAAC,WAAD;AAEZhB,MAAAA,SAAS,qBAAc1B,MAAd,uBAAgCA,MAAhC;AAFG,OAAd0C;AANO,GAAA,EAUN,CAVHvD,MAUG,CAVM,CAATA;AAYAA,EAAAA,SAAS,CAAC,YAAA;AACR,QAAA,GAAA,EAAS;AACP,UAAIwD,GAAG,IAAIC,QAAQ,KAAnB,SAAA,EAAmC;AACjCZ,QAAAA,OAAO,CAAPA,IAAAA,CAAAA,gNAAAA;AAGA;AACD;;AACDI,MAAAA,WAAW,CAAXA,aAAW,CAAXA;AACAS,MAAAA,aAAa,CAAbA,KAAa,CAAbA;AARF,KAAA,MASO;AACL,UAAA,QAAA,EAAcT,WAAW,CAAXA,QAAW,CAAXA;AAEdS,MAAAA,aAAa,CAAbA,IAAa,CAAbA;AACD;AAdM,GAAA,EAeN,CAfH1D,QAeG,CAfM,CAATA;;AAiBA,MAAMiD,WAAW,GAAIU,SAAfV,WAAeU,CAAAA,SAAD,EAAA;AAClB,QAAIA,SAAS,IAAb,GAAA,EAAsB;AAEpBL,MAAAA,cAAc,iCAAC,WAAD;AAEZtB,QAAAA,KAAK,EAAE;AAFK,SAAdsB;;AAIA,UAAA,OAAA,EAAY;AACVC,QAAAA,cAAc,iCAAC,WAAD;AAEZnB,UAAAA,IAAI,EAAEuB,SAAS,GAATA,EAAAA,GAAiB;AAFX,WAAdJ;AAID;;AAEDK,MAAAA,UAAU,CAAC,YAAA;AACT,YAAI,CAACpC,SAAS,CAAd,OAAA,EAAwB;AACtB;AACD;;AAED8B,QAAAA,cAAc,iCAAC,WAAD;AAEZd,UAAAA,OAAO,EAFM,CAAD;AAGZR,UAAAA,KAAK,EAHQ,MAAD;AAIZD,UAAAA,UAAU,gBAJG,eAIH,gBAJE;AAKZlB,UAAAA,KAAK,EAAEA;AALK,WAAdyC;AAQAM,QAAAA,UAAU,CAAC,YAAA;AACT,cAAI,CAACpC,SAAS,CAAd,OAAA,EAAwB;AACtB;AACD;;AAED,cAAI2B,iBAAiB,CAArB,MAAA,EAA8B;AAE5BJ,YAAAA,oBAAoB,iCAAC,iBAAD;AAElBrB,cAAAA,MAAM,EAAE;AAFU,eAApBqB;AAIAC,YAAAA,gBAAgB,CAAhBA,CAAgB,CAAhBA;AACAC,YAAAA,WAAW,CAAXA,CAAW,CAAXA;AACD;;AAED,cAAIL,kBAAkB,CAAtB,MAAA,EAA+B;AAC7BQ,YAAAA,qBAAqB,iCAAC,kBAAD;AAEnB1B,cAAAA,MAAM,EAAE;AAFW,eAArB0B;AAIAJ,YAAAA,gBAAgB,CAAhBA,CAAgB,CAAhBA;AACAC,YAAAA,WAAW,CAAXA,CAAW,CAAXA;AACD;;AAED,cAAA,gBAAA,EAAsBY,gBAAgB;AACtCb,UAAAA,gBAAgB,CAAhBA,CAAgB,CAAhBA;AACAC,UAAAA,WAAW,CAAXA,CAAW,CAAXA;AA1BQ,SAAA,EAAVW,eAAU,CAAVA;AAbQ,OAAA,EAAVA,YAAU,CAAVA;AAbF,KAAA,MAuDO;AACLN,MAAAA,cAAc,CAAEQ,UAAAA,YAAD,EAAA;AACb,+CAAO,YAAP;AAEE9B,UAAAA,KAAK,EAAE2B,SAAS,GAFX,GAAP;AAGEnB,UAAAA,OAAO,EAHF,CAAP;AAIET,UAAAA,UAAU,EAAE4B,SAAS,GAATA,CAAAA,iBAAAA,YAAAA,eAA8C;AAJ5D;AADFL,OAAc,CAAdA;;AASA,UAAA,OAAA,EAAY;AACVC,QAAAA,cAAc,iCAAC,WAAD;AAEZnB,UAAAA,IAAI,EAAEuB,SAAS,GAATA,GAAAA,GAFO,GAAD;AAGZ5B,UAAAA,UAAU,EAAE4B,SAAS,GAATA,CAAAA,iBAAAA,YAAAA,eAA8C;AAH9C,WAAdJ;AAKD;AACF;AAzEH,GAAA;;AA4EA7D,EAAAA,WAAW,CACT,YAAA;AACE,QAAMqE,MAAM,GAAG1D,SAAS,CAAA,EAAA,EAAxB,EAAwB,CAAxB;;AAEA,QAAI2D,aAAa,GAAbA,MAAAA,GAAJ,EAAA,EAAiC;AAC/BhB,MAAAA,gBAAgB,CAACgB,aAAa,GAA9BhB,MAAgB,CAAhBA;AACAC,MAAAA,WAAW,CAACe,aAAa,GAAzBf,MAAW,CAAXA;AACD;AAPM,GAAA,EASTE,iBAAiB,CAAjBA,MAAAA,GAA2BA,iBAAiB,CAA5CA,WAAAA,GATFzD,IAAW,CAAXA;AAYA,SACE,aAAA,CAAA,KAAA,EAAA;AAAKkB,IAAAA,SAAS,EAAEW,mBAAhB;AAAoCH,IAAAA,KAAK,kCAAE,oBAAF,GAA+BD,eAA/B;AAAzC,GAAA,EACE,aAAA,CAAA,KAAA,EAAA;AAAKP,IAAAA,SAAS,EAAEA,UAAhB;AAA2BQ,IAAAA,KAAK,kCAAE,WAAF,GAAsBA,MAAtB;AAAhC,GAAA,EACGF,OAAM,GAAG,aAAA,CAAA,KAAA,EAAA;AAAKE,IAAAA,KAAK,kCAAE,WAAF,GAAsBE,eAAtB;AAAV,GAAA,CAAH,GAHb,IAEI,CADF,CADF;AAjPJ,CAA6B,CAA7B","sourcesContent":["import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomInt(min: number, max: number): number {\n  // @ts-ignore\n  return Math.floor(Math.random() * (max - min + 1) + min)\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt } from './utils'\n\ntype IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue: number, refreshRate: number) => void\n  staticStart: (startingValue: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n    const [pressedContinuous, setPressedContinuous] = useState<{\n      active: boolean\n      startingValue: number\n      refreshRate: number\n    }>({ active: false, startingValue: 20, refreshRate: 1000 })\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n        setPressedContinuous({\n          active: true,\n          refreshRate,\n          startingValue,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue: number) {\n        if (pressedContinuous.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little bit\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.active) {\n              // if we have continous loader just ending, we kill it and reset it\n              setPressedContinuous({\n                ...pressedContinuous,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const random = randomInt(10, 20)\n\n        if (localProgress + random < 90) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.active ? pressedContinuous.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport {\n  IProps,\n}\n\nexport default LoadingBar\n"]},"metadata":{},"sourceType":"module"}